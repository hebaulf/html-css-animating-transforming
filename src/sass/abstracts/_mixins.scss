// margin sides auto mixin
@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
  }
}

// Pseudo element mixin
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin bubbleVariables(
  $position: false,
  $size: false,
  $delay: false,
  $duration: false,
  $color: false
) {
  @if $position {
    left: $position;
  }
  @if $size {
    height: $size;
    width: $size;
  }
  @if $delay {
    animation-delay: $delay;
  }
  @if $duration {
    animation-duration: $duration;
  }
  @if $color {
    background-color: $color;
  }
}
/* 
  Usage:
  @include bubbleVariables($position, $size, $delay, $duration, $color);
*/

// font setting (for font-size, colour, font-weight and line-height)
@mixin font-source($size: false, $colour: false, $weight: false, $lh: false) {
  font-family: $font-family;
  @if $size {
    font-size: $size;
  }
  @if $colour {
    color: $colour;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
}

/***************************/
/* Fluid text */

/* The font will by default be at the preferrred size 
   on 1240px viewport. */
@mixin pixelsToFluidText(
  $minimum,
  $preferred,
  $maximum,
  $preferred_viewport_width: 980
) {
  /* Fallback for IE11 */
  font-size: toRem($preferred);
  font-size: calculateClamp(
    $minimum,
    $preferred,
    $maximum,
    $preferred_viewport_width
  );
}
/* 
    Usage:
    @include pixelsToFluidText(24px, 38px, 60px);
*/

/***************************/
/* Fluid gutters */
@mixin responsive-gutter-1x($direction: bottom, $gutter: 36px) {
  @if $direction == top {
    margin-top: $gutter;
    margin-top: calculateClamp(math.div($gutter, 2), ($gutter * 0.75), $gutter);
  } @else if $direction == bottom {
    margin-bottom: $gutter;
    margin-bottom: calculateClamp(
      math.div($gutter, 2),
      ($gutter * 0.75),
      $gutter
    );
  } @else {
    @error "Unknown direction #{$direction}.";
  }
}
/* 
    Usage:
    @include responsive-gutter-1x(bottom);
*/

@mixin responsive-gutter-2x($direction: bottom, $gutter: 36px) {
  @if $direction == top {
    margin-top: ($gutter * 2);
    margin-top: calculateClamp($gutter, ($gutter * 1.5), ($gutter * 2));
  } @else if $direction == bottom {
    margin-bottom: ($gutter * 2);
    margin-bottom: calculateClamp($gutter, ($gutter * 1.5), ($gutter * 2));
  } @else {
    @error "Unknown direction #{$direction}.";
  }
}
/* 
    Usage:
    @include responsive-gutter-2x(bottom);
*/

// Mixin for making the triangle for the tooltip
@mixin css-triangle(
  $color,
  $direction,
  $size: 6px,
  $position: absolute,
  $round: false
) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}
